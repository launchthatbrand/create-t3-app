import "~/styles/globals.css";

import { type Tokens, getTokens } from "next-firebase-auth-edge";
import { cookies, headers } from "next/headers";

import { Toaster } from "@/components/ui/toaster";

import { AuthProvider } from "./provider/AuthProvider";
import { Inter } from "next/font/google";
import { TRPCReactProvider } from "~/trpc/react";
import { type User } from "./context/AuthContext";
import { authConfig } from "./lib/firebase/server";
import { filterStandardClaims } from "next-firebase-auth-edge/lib/auth/claims";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-sans",
});

export const metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

const toUser = ({ decodedToken }: Tokens): User => {
  const {
    uid,
    email,
    picture: photoURL,
    email_verified: emailVerified,
    phone_number: phoneNumber,
    name: displayName,
  } = decodedToken;

  const customClaims = filterStandardClaims(decodedToken);

  return {
    uid,
    email: email ?? null,
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    displayName: displayName ?? null,
    photoURL: photoURL ?? null,
    phoneNumber: phoneNumber ?? null,
    emailVerified: emailVerified ?? false,
    customClaims,
  };
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const tokens = await getTokens(cookies(), authConfig);
  const user = tokens ? toUser(tokens) : null;
  return (
    <html lang="en">
      <body
        className={`font-sans ${inter.variable} flex min-h-screen flex-1 items-center justify-center`}
      >
        <AuthProvider serverUser={user}>
          <TRPCReactProvider headers={headers()}>{children}</TRPCReactProvider>
        </AuthProvider>
        <Toaster />
      </body>
    </html>
  );
}
